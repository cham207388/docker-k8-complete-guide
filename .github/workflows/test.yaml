name: "Test"
on:
  workflow_call:

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Setup Node Environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          
      - name: Install Dependencies
        run: npm ci
        
#      - name: Check formatting Errors
#        run: npm run format
      
      - name: Check ESLint Errors
        run: npm run lint
      
      - name: Check for Type Errors
        run: npm run typecheck
        
      - name: Build project
        run: npm run build
        env:
          FLAGSMITH_KEY: ${{ secrets.FLAGSMITH_KEY }}
        
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: .next/
          
      - name: Run Unit Tests
        run: npm run test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/
          
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: cham207388/docker-k8-complete-guide
          
      - name: Store Playwright's Version
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright | sed 's/.*@//')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
          
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: cache-playwright
        with:
         path: ~/.cache/ms-playwright
         key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}
         
      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Run E2E Tests
        run: npm run test:e2e
        env:
          FLAGSMITH_KEY: ${{ secrets.FLAGSMITH_KEY }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          
      - name: Send custom JSON data to Slack workflow
        uses: slackapi/slack-github-action@v1.25.0
        if: failure()
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text" : {
                    "type": "mrkdwn",
                    "text": "*<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }} workflow run>* failed"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  
